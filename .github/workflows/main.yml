name: Deploy Demux App
"on":
  push:
    branches:
      - "main"

env:
  FLUTTER_VERSION: "3.16.0-0.3.pre"
  FLUTTER_CHANNEL: "beta"
  WEB_RENDERER: "html"
  AWS_REGION: "sa-east-1"
  S3_BUCKET_NAME: "demux-web-frontend"
  AMPLIFY_APP_ID: "d324ud9ks9dzb0"
  AMPLIFY_BRANCH_NAME: "main"
  S3_BUCKET_URL: "https://demux-web-frontend.s3.sa-east-1.amazonaws.com/"

jobs:
  update_version:
    name: Update Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up yq
        uses: mikefarah/yq@master

      - name: Read version and build number
        id: version
        run: |
          version=$(yq e '.version' pubspec.yaml)
          IFS='+' read -ra ADDR <<< "$version"
          version_number=${ADDR[0]}
          build_number=${ADDR[1]}
          echo "version_number=$(echo $version_number | awk -F. -v OFS=. '{$NF++; print}')" >> $GITHUB_ENV
          echo "build_number=$(($build_number + 1))" >> $GITHUB_ENV

      - name: Write new version and build number
        run: |
          yq e ".version = \"${version_number}+${build_number}\"" -i pubspec.yaml
          cat pubspec.yaml

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pubspec.yaml
          git commit -m "[skip ci] Update version in pubspec.yaml"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  deploy_web:
    name: Deploy Web 
    runs-on: ubuntu-latest
    needs: update_version
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
      
      - name: Get Packages
        run: |
          flutter pub get

      - name: Build Web Application
        run: |
          flutter build web --release --web-renderer=${{ env.WEB_RENDERER }}
        
      - name: Zip files
        run: |
          mkdir build/zipped_build
          cd build/web
          zip -q -r ../zipped_build/demux_web_app . 
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp build/zipped_build/demux_web_app.zip s3://${{ env.S3_BUCKET_NAME }}/demux_web_app.zip

      - name: Deploy to Amplify
        run: |
          aws amplify start-deployment --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name ${{ env.AMPLIFY_BRANCH_NAME }} --source-url "s3://${{ env.S3_BUCKET_NAME }}/demux_web_app.zip"

  # deploy_android:
  #   name: Deploy Android 
  #   runs-on: ubuntu-latest
  #   needs: update_version
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: ${{ env.FLUTTER_VERSION }}
  #         channel: ${{ env.FLUTTER_CHANNEL }}

  #     - name: Decode upload keystore
  #       run: |
  #         echo -n ${{ secrets.UPLOAD_KEYSTORE_B64 }} | base64 --decode > android/app/upload-keystore.jks

  #     - name: Configure key properties
  #       run: |
  #         cd android
  #         cp key.properties.ci key.properties
  #         sed -i 's/store-password-ci/${{ secrets.STORE_PASSWORD }}/' 'key.properties'
  #         sed -i 's/key-password-ci/${{ secrets.KEY_PASSWORD }}/' 'key.properties'

  #     - name: Build signed bundle
  #       run: |
  #         flutter build appbundle

  #     - name: Archive bundle
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: android-bundle
  #         path: build/app/outputs/bundle/release/app-release.aab
